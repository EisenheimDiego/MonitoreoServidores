// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ProyectoPrograV;
//
//    var monitoreo = Monitoreo.FromJson(jsonString);

namespace ProyectoPrograV
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Monitoreo
    {
        [JsonProperty("monitoreoId")]
        public long MonitoreoId { get; set; }

        [JsonProperty("servidorId")]
        public long ServidorId { get; set; }

        [JsonProperty("fecha")]
        public DateTime Fecha { get; set; }

        [JsonProperty("uso_de_CPU")]
        public long UsoDeCpu { get; set; }

        [JsonProperty("uso_de_Memoria")]
        public long UsoDeMemoria { get; set; }

        [JsonProperty("uso_de_Disco")]
        public long UsoDeDisco { get; set; }

        [JsonProperty("servicios")]
        public List<ServicioM> Servicios { get; set; }
    }

    public partial class ServicioM
    {
        [JsonProperty("servicioId")]
        public long ServicioId { get; set; }

        [JsonProperty("codigoEstado")]
        public long CodigoEstado { get; set; }

        [JsonProperty("descripcion")]
        public string Descripcion { get; set; }
    }

    public partial class Monitoreo
    {
        public static List<Monitoreo> FromJson(string json) => JsonConvert.DeserializeObject<List<Monitoreo>>(json, ProyectoPrograV.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Monitoreo> self) => JsonConvert.SerializeObject(self, ProyectoPrograV.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
