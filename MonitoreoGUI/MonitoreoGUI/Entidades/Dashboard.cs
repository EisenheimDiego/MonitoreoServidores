// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MonitoreoGUI;
//
//    var dashboard = Dashboard.FromJson(jsonString);

namespace MonitoreoGUI
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Dashboard
    {
        [JsonProperty("codigo")]
        public long Codigo { get; set; }

        [JsonProperty("nombre")]
        public string Nombre { get; set; }

        [JsonProperty("ultima_fecha")]
        public DateTimeOffset UltimaFecha { get; set; }

        [JsonProperty("estado")]
        public string Estado { get; set; }

        [JsonProperty("uso_de_CPU")]
        public long UsoDeCpu { get; set; }

        [JsonProperty("uso_de_Memoria")]
        public long UsoDeMemoria { get; set; }

        [JsonProperty("uso_de_Disco")]
        public long UsoDeDisco { get; set; }
    }

    public partial class Dashboard
    {
        public static List<Dashboard> FromJson(string json) => JsonConvert.DeserializeObject<List<Dashboard>>(json, MonitoreoGUI.Converter.Settings);
    }

    public static class SerializeDashboard
    {
        public static string ToJson(this List<Dashboard> self) => JsonConvert.SerializeObject(self, MonitoreoGUI.Converter.Settings);
    }

    internal static class ConverterDashboard
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
